"""

Python Generated by the OSKAR Compiler v2.3 at
2017-05-15 17:35:06.6184696 Eastern Daylight Time

Compiler written by Bryce Summers
Please see https://github.com/Bryce-Summers/OSKAR

"""

from pythonGenerator import *

# Global Variables

scene = Scene()

p = scene.newFunction("myTY1")
p.addArgument("x")
p.addArgument("time")
p.addExpression("cos((x*360)+(time*360))")
p.scalar_type()

# 1 functions parsed.

# Picture definition for funplot
scene.newPicture("funplot")
scene.addArgument("TYfunction")
scene.iterations("i", "0", "80")
scene.scaling(".0125", ".02", ".02")
scene.scaling(".5", "4", "5")
scene.translation("i", "TYfunction ( i", "Global_t ) , .05")
scene.scaling("1", ".5", "1")
scene.translation("0", ".5", "0")
scene.basis("cube")

# Picture via reduction for cosine
scene.newDirectPicture("cosine")
scene.expression("funplot(myTY1)")

# Picture definition for funplot
scene.newPicture("funplot")
scene.addArgument("TYfunction")
scene.addArgument("numpix")
scene.iterations("i", "0", "numpix")
scene.scaling(".5", "4", "5")
scene.basis("cube")

# Picture via reduction for cosine
scene.newDirectPicture("cosine")
scene.expression("funplot(myTY1,100)")

# Picture definition for MakeArray
scene.newPicture("MakeArray")
scene.addArgument("base=cube")
scene.addArgument("rows=4")
scene.addArgument("cols=2")
scene.iterations("i", "0", "80")
scene.scaling("1 / ( rows * cols )", "1 / ( rows * cols )", "1 / ( rows * cols )")
scene.translation("modulo ( i", "cols )", "step ( i , rows ) , 0")
scene.basis("base")

# Picture via reduction for wallpaper
scene.newDirectPicture("wallpaper")
scene.expression("MakeArray(cosine,4,4)")


# Top level picture definition.
scene.newDrawCommand("draw")
scene.iterations("i", "0", "400")
scene.basis("wallpaper")


# Generate Code in a Render Language
scene.generateCode()
