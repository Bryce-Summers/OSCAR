floor   <<  cube[{1}* (2,2,.02)         # 1. scale cube down to very thin slab on z-axis
                                        # and expand to twice size in x and y
                                        # to form background for other pics
                    + (-.5,-.5,-.05)    # 2. center in quadrant to form stage  
                ]

#   The Translate vector can be simplified somewhat by defining the TY function 
#       outside the picture.

myTY1(x,time) :: cos((x*360)+(time*360));
    
cosine  <<  cube[{80}   * (.0125, .02, .02) # 1. scale cube to thin vertical slab.
                        * (.5,4,5)          #    scale cube to thin vertical slab
                        + (i, myTY1(i,$t), .05)  # 2. Now the TY parameter references the
                                                 # myTY1 function, with 'i' and '$t' values for
                                                 #  'x' and 'time.'
                        * (1,.5,1)          # 3. Halve the height of the curve from 2.0 to 1.0
                        + (0,.5,0)          # 4. Move the curve up .5 to center in 1st quadrant.
                ] 

                
#   The Draw command and resulting picture are the same:  Pic05.png

#   The 400-frame animation in Pic06.gif                
Draw {400}[ floor, cosine ]      # $t goes from 0. to 1. in 400 frames